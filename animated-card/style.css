:root {
  --clr-neutral-900: hsl(207, 19%, 9%);
  --clr-neutral-100: #e5aa8c;
  --clr-accent-400: #748E54;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  display: grid;
  min-height: 100vh;
  place-items: center;
  line-height: 1.6;
  background: #1C3636;
  font-family: sans-serif;
}

.card {
  color: var(--clr-neutral-100);
  background-image: url(img/nm-img.png);
  background-size: cover;
  padding: 10rem 0 0;
  max-width: 40ch;
  border-radius: 0.5rem;
  overflow:hidden;

  transition: transform 500ms ease;
}

.card:hover {
  transform: scale(1.05);
  background-image: url(img/nm-img.png), brightness(70%);
}

.card--content {
  /*
  padding variable measurement is locally scoped (can only be used in card
  content). It's used with calc to calculate the pseudo elements length to
  fit the content of the
  */
  --padding: 1.5rem;
  padding: var(--padding);
  background: linear-gradient(
    hsl(0 0% 0% / 0),
    hsl(20 0% 0% / 0.3) 15%,
    hsl(0 0% 0% / 1)
  );
  transform: translateY(65%);

  transition: transform 650ms ease;
}

.card--content > *:not(.card--title) {
  opacity: 0;
}

.card:hover .card--content {
  transform: translateY(0);
}

.card:hover .card--content > *:not(.card--title) {
  opacity: 1;
}

.card--title {
  /*
  max content is used so the pseudo element is the same size as the content,
  if the text wraps over one line this will break. max-width: 100%; should work
  as a substitute in that case, but I like experimenting with new values.
  */
  width: max-content;
  position: relative;
}

.card--title::after {
  content: "";
  position: absolute;
  height: 4px;
  left: calc(var(--padding) * -1);
  bottom: 0;
  width: calc(100% + var(--padding));
  background: var(--clr-accent-400);
  transform: ScaleX(0);
  transform-origin: left;

  transition: transform 500ms ease;
}

.card:hover .card--title::after {
  /*
  this selector selects the pseudo element on hover. the declaration gives
  the horizontal line a point to animate and transition to.
  */
  transform: scaleX(1);
}

.card-body {
  color: rgb(255 255 255 / 0.90);
}

.card--buttons {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.button {
  cursor: pointer;
  display: inline-block;
  text-decoration: none;
  color: var(--clr-neutral-900);
  background-color: var(--clr-accent-400);
  padding: 0.5em 1.25em;
  border-radius: 0.25rem;
}

.button:hover,
.button:focus {
  background-color: var(--clr-neutral-100);
}
